---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: true
  no_log: "{{ molecule_no_log }}"
  tasks:
    # Developer must implement.
    - name: "Create instances"
      set_fact:
        server: {
          'name': "{{ item.name }}",
          'hostname': "{{ item.instance.hw_name }}",
          'username': "{{ item.user }}",
          'password': "{{ item.password }}",
          'hardware': {
            'memory_mb': "{{ item.memory | default(omit) }}",
            'num_cpus': "{{ item.cpu | default(omit) }}"
          },
          'wait_for_ip_address': "yes"
          'state': poweredon
          'timestamp': "{{ ansible.epoch }}"
        }
      with_items: "{{ molecule_yml.platforms }}"
    - name: "Externalize"
      local_action:
        copy:
          content: "{{ server }}"
          dest="{{ lookup('env', 'PWD') }}/{{ item.name }}.log"
    # Developer must map instance config.
    # Mandatory configuration for Molecule to function.

    - name: Populate instance config dict
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.instance.hw_name }}",
          'address': "{{ item.instance.ipv4 }}",
          'user': "{{ lookup('env', 'USER') }}",
          'port': "22",
          'identity_file': "{{ lookup('env', 'PWD') }}/.ssh/id_rsa",
        }
      with_items: "{{ server.results }}"
      register: instance_config_dict
      when: server.changed | bool

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: server.changed | bool

    - name: Dump instance config
      copy:
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
      when: server.changed | bool
